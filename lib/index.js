// Generated by CoffeeScript 2.0.2
module.exports = function() {
  return module.exports.mutate({}, ...arguments);
};

module.exports.mutate = function() {
  var clone, copy, i, j, name, options, ref, src, target;
  target = arguments[0];
  if (target == null) {
    target = {};
  }
  // Handle case when target is a string or something (possible in deep copy)
  if (typeof target !== "object" && typeof target !== 'function') {
    target = {};
  }
  for (i = j = 0, ref = arguments.length; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {
    // Only deal with non-null/undefined values
    if ((options = arguments[i]) !== null) {
      // Extend the base object
      for (name in options) {
        src = target[name];
        copy = options[name];
        if (target === copy) {
          // Prevent never-ending loop
          continue;
        }
        // Recurse if we're merging plain objects
        if ((copy != null) && typeof copy === 'object' && !Array.isArray(copy) && !(copy instanceof RegExp) && !Buffer.isBuffer(copy)) {
          clone = src && (src && typeof src === 'object' ? src : {});
          // Never move original objects, clone them
          target[name] = module.exports(false, clone, copy);
        // Don't bring in undefined values
        } else if (copy !== void 0) {
          if (Array.isArray(copy)) {
            copy = copy.slice(0);
          }
          target[name] = copy;
        }
      }
    }
  }
  // Return the modified object
  return target;
};
